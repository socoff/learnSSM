server:
  port: 80

  # servlet:
  #   session:
  #     timeout: 10s # 单位：秒

spring:
  # mvc:
  #   static-path-pattern: /**
  thymeleaf:
    cache: false
    mode: HTML
  aop: 
    auto: true 

  # resources:
  #   static-locations: classpath:/META-INF/resources/,classpath:/META-INF/resources/webjars/,classpath:/static/swagger/,classpath:/resources/,classpath:/static/,classpath:/public/,file:${web.upload-path}
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      # url:  jdbc:mysql://127.0.0.1:3306/starter
      url: jdbc:mysql://127.0.0.1:3306/starter?useAffectedRows=true&characterEncoding=UTF-8&allowMultiQueries=true&serverTimezone=UTC
      username: root
      password: 111111
      driver-class-name: com.mysql.cj.jdbc.Driver
      initial-size: 1 #初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
      min-idle: 5 #最小连接池数量
      max-active: 50 #最大连接池数量
      max-wait: 60000 #获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降
      time-between-eviction-runs-millis: 60000 #间隔多久进行一次检测，检测需要关闭的空闲连接
      min-evictable-idle-time-millis: 30000 #配置一个连接在池中最小生存的时间，单位是毫秒
      validation-query: SELECT 'x' #用来检测连接是否有效的sql，要求是一个查询语句。
      test-while-idle: true #建议配置为true，不影响性能，并且保证安全性。
      test-on-borrow: false #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-return: false #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      #打开PSCache，并指定每个连接上PSCache的大小。oracle设为true，mysql设为false。分库分表较多推荐设置为false
      pool-prepared-statements: false #是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
      max-pool-prepared-statement-per-connection-size: 20
      
mybatis:
  # type-aliases-package: com.example.demo.bean
  mapper-locations: classpath:mapper/*.xml #mapper XML文件的位置
  # configuration:
  #   log-impl: LOG4J

shiro:
  credentials:
    hashAlgorithmName: md5
    hashIterations: 2
    
logging:
  level:
    com.example.demo: debug


